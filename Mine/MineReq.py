from asyncio.exceptions import TimeoutError

import nextcord.errors
from nextcord import ButtonStyle, Embed, Interaction, Thread, Member, utils
from nextcord.ui import View, button, Button

from config import CHANNELS


class CButton(Button):
    def __init__(self, label, emoji, bot):
        super().__init__(label=label, emoji=emoji)
        self.rtype = None
        self.bot = bot

    async def callback(self, interaction: Interaction):
        m = await interaction.channel.send(f"{interaction.user.mention} –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π **–ü–æ—Ç–æ–∫**")
        thread = await interaction.channel.create_thread(name=f"{self.label}-{interaction.user}", message=m)
        try:
            await interaction.response.send_message(f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ—Ç–∫—É {thread.mention} –∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", ephemeral=True)
        except nextcord.errors.NotFound:
            pass
        await m.delete()
        self.disabled = True
        self.view.stop()
        await threadEngine(thread, interaction.user, self.bot)


class CreateRequest(View):
    def __init__(self, channel, bot):
        super().__init__(timeout=None)
        self.channel = channel
        self.bot = bot

    @button(style=ButtonStyle.success, label="–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", emoji="üìù", custom_id="create")
    async def create(self, button, interaction: Interaction):
        btns = (("–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "üöß"), ("–ö–≤–µ—Å—Ç—ã", "‚úí"), ("–î–∏–∑–∞–π–Ω", "‚úè"), ("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "‚úè"), ("–î—Ä—É–≥–æ–µ", "üßô"))
        view = View()
        for b in btns:
            view.add_item(CButton(*b, self.bot))
        await interaction.response.send_message("–ß–µ–º –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–Ω—è—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ?", view=view, ephemeral=True)


class Confirm(View):
    def __init__(self):
        super().__init__(timeout=60)
        self.accept = True

    @button(style=ButtonStyle.success, label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", emoji="‚úÖ")
    async def confirm(self, button, interaction: Interaction):
        self.stop()

    @button(style=ButtonStyle.secondary, label="–û—Ç–º–µ–Ω–∞")
    async def cancel(self, button, interaction: Interaction):
        self.accept = False
        self.stop()


async def threadEngine(thread: Thread, member: Member, bot):
    rtype = thread.name.split("-")[0]
    try:
        m = await thread.send(f"C–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?")
        text = await bot.wait_for("message", timeout=300, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        name = text.content

        m = await thread.send("–°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?")
        text = await bot.wait_for("message", timeout=300, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        age = text.content

        m = await thread.send("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ (–£ –í–∞—Å 10 –º–∏–Ω—É—Ç, –∏–Ω–∞—á–µ –≤–µ—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—Å—è)")
        text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        about = text.content

        if rtype == "–î—Ä—É–≥–æ–µ":
            m = await thread.send("–ë—ã–ª –ª–∏ —É –í–∞—Å —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö? –ï—Å–ª–∏ –¥–∞, —Ç–æ —Ä–∞—Å–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–π.")
        else:
            m = await thread.send("–ö–∞–∫–æ–π —É –≤–∞—Å –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ?")
        text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        exp = text.content

        m = await thread.send("–ü–æ—á–µ–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É?")
        text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        join_reason = text.content

        m = await thread.send("–°–∫–æ–ª—å–∫–æ –í—ã –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç—É?")
        text = await bot.wait_for("message", timeout=300, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        spend_time = text.content

        m = await thread.send("–ß–µ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞?")
        text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        needs = text.content

        match rtype:
            case "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ":
                m = await thread.send("–ù–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –í—ã —É–º–µ–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏ –∏ –º–æ–¥–∞–º–∏ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞?")
            case "–ö–≤–µ—Å—Ç—ã":
                m = await thread.send("–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –í—ã –∑–Ω–∞–µ—Ç–µ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫?")
            case "–î–∏–∑–∞–π–Ω":
                m = await thread.send("–í –∫–∞–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?")
            case "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ":
                m = await thread.send("–ö–∞–∫–∏–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –í—ã –∑–Ω–∞–µ—Ç–µ?")
            case "–î—Ä—É–≥–æ–µ":
                m = await thread.send("–ß—Ç–æ –í—ã —É–º–µ–µ—Ç–µ?")
        text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

        acceptation = await confirm(thread, member, bot, text)
        if acceptation:
            text = acceptation
        await m.delete()
        await text.delete()
        skill = text.content

        doing = None
        if rtype != "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ":
            if rtype == "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ":
                m = await thread.send("–ß—Ç–æ –í—ã —É–º–µ–µ—Ç–µ –¥–µ–ª–∞—Ç—å?")
            else:
                m = await thread.send("–ß–µ–º –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ?")
            text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

            acceptation = await confirm(thread, member, bot, text, last=True if rtype not in ("–î–∏–∑–∞–π–Ω", "–ö–≤–µ—Å—Ç—ã") else False)
            if acceptation:
                text = acceptation
            await m.delete()
            await text.delete()
            doing = text.content

        works = None
        if rtype in ("–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "–î–∏–∑–∞–π–Ω"):
            m = await thread.send("–°–∫–∏–Ω—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Å–≤–æ–∏—Ö —Ä–∞–±–æ—Ç (–•–æ—Ç—è –±—ã 3 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)")
            text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

            acceptation = await confirm(thread, member, bot, text, last=True)
            if acceptation:
                text = acceptation
            await m.delete()
        if rtype == "–ö–≤–µ—Å—Ç—ã":
            m = await thread.send("–ö–∞–∫–∏–µ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–Ω–∏–º–µ –í—ã –∑–Ω–∞–µ—Ç–µ?")
            text = await bot.wait_for("message", timeout=600, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)

            acceptation = await confirm(thread, member, bot, text, last=True)
            if acceptation:
                text = acceptation
            await text.delete()
            await m.delete()
            works = text.content
    except TimeoutError:
        await thread.delete()
        return

    info = [f"**–ò–º—è:** {name}", f"**–í–æ–∑—Ä–∞—Å—Ç:** {age}", f"**–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:** {about}", f"**–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:** {exp}", f"**–ú–æ—Ç–∏–≤—ã:** {join_reason}", f"**–°–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è:** {spend_time}", f"**–ñ–µ–ª–∞–Ω–∏—è:** {needs}", f"**–£–º–µ–Ω–∏—è:** {skill}"]
    if doing:
        info.append(f"**–ñ–µ–ª–∞–µ–º—ã–π —Ä–æ–¥ –∑–∞–Ω—è—Ç–∏–π:** {doing}")
    if works and rtype == "–ö–≤–µ—Å—Ç—ã":
        info.append(f"**–ò–∑–≤–µ—Å—Ç–Ω—ã–µ –∞–Ω–∏–º–µ:** {works}")

    await thread.send(f"{member.mention} —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É", embed=Embed(title=rtype, description="\n".join(info)))

    admin = utils.get(thread.guild.channels, id=CHANNELS["admin_requests"])
    await admin.send(f"@everyone –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {thread.mention}")


async def confirm(thread, member, bot, text, last=False):
    while True:
        view = Confirm()
        m = await thread.send("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É?" if not last else "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã?", view=view)
        await view.wait()
        await m.delete()
        if not view.accept:
            if text:
                await text.delete()
            text = await bot.wait_for("message", timeout=300, check=lambda m: m.author.id == member.id and m.channel.id == thread.id)
        else:
            return text


async def requests(channel, bot):
    await channel.purge()
    view = CreateRequest(channel, bot)
    await channel.send(embed=Embed(description="–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ Minecraft-–ü—Ä–æ–µ–∫—Ç–∞?\n"
                                               "–ó–Ω–∞—á–∏—Ç –í–∞–º —Å—é–¥–∞! (–æ—Ç 13 –ª–µ—Ç)", color=0x1EE575), view=view)
